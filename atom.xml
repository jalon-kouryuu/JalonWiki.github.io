<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jalon Blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-10-26T16:00:00.000Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Jalon</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Git入门&amp;相关规范</title>
    <link href="http://example.com/2023/10/25/git-intro/"/>
    <id>http://example.com/2023/10/25/git-intro/</id>
    <published>2023-10-24T16:00:00.000Z</published>
    <updated>2023-10-26T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Git入门-相关规范"><a href="#Git入门-相关规范" class="headerlink" title="Git入门&amp;相关规范"></a>Git入门&amp;相关规范</h1><h2 id="1-概要"><a href="#1-概要" class="headerlink" title="1. 概要"></a>1. 概要</h2><h3 id="1-1-什么是Git"><a href="#1-1-什么是Git" class="headerlink" title="1.1 什么是Git"></a>1.1 什么是Git</h3><p><strong>Git</strong>：版本管理系统，主要用于管理项目代码文件</p><ul><li>追踪代码变化</li><li>团队协作</li></ul><h3 id="1-2-基本概念"><a href="#1-2-基本概念" class="headerlink" title="1.2 基本概念"></a>1.2 基本概念</h3><p><img src="/git-intro/git_1.png" alt="git_framework"></p><ul><li><p>仓库（repository）</p><ul><li>本地</li><li>远程</li></ul></li><li><p>提交（commit）</p></li><li><p>分支（branch）</p></li></ul><h3 id="1-2-相关代码托管平台"><a href="#1-2-相关代码托管平台" class="headerlink" title="1.2 相关代码托管平台"></a>1.2 相关代码托管平台</h3><ul><li>github</li><li>gitlab</li><li>gitee(国内&amp;公司)</li></ul><h2 id="2-安装和使用"><a href="#2-安装和使用" class="headerlink" title="2. 安装和使用"></a>2. 安装和使用</h2><h3 id="2-1-安装"><a href="#2-1-安装" class="headerlink" title="2.1 安装"></a>2.1 安装</h3><ul><li><a href="https://git-scm.com/downloads">安装参考</a><ul><li>linux&#x2F;macOS系统：通过命令安装</li><li>windows系统：下载git bash安装</li></ul></li><li>配置<ul><li><p>本地config</p><ul><li>username</li><li>mail</li></ul></li><li><p><code>.gitignore</code>文件: 忽略的文件&#x2F;文件夹</p></li><li><p>ssh认证：用于拉取、推送到远程仓库</p></li></ul></li></ul><h3 id="2-2-git命令"><a href="#2-2-git命令" class="headerlink" title="2.2 git命令"></a>2.2 git命令</h3><ul><li><p>基础命令</p><ul><li>配置：config、remote</li><li>初始化仓库：init</li><li>拉取仓库：clone</li><li>添加&#x2F;移动&#x2F;移除：add、mv、rm</li><li>提交：commit</li><li>撤销：reset、revert</li><li>推送：push</li><li>更新：fetch、pull</li><li>查询：status、log、reflog、diff、show</li></ul><p><img src="/git-intro/git_2.png" alt="git_2"></p></li><li><p>分支（branch）</p><ul><li>创建&#x2F;查询&#x2F;删除：branch</li><li>切换：checkout</li><li>更新：fetch</li><li>合并：merge</li><li>变基：rebase</li></ul><p><img src="/git-intro/git_3.png" alt="image-20231027143428418"></p></li><li><p>其他</p><ul><li>标签：tag</li><li>暂存：stash</li></ul></li></ul><h3 id="2-3-实践内容"><a href="#2-3-实践内容" class="headerlink" title="2.3 实践内容"></a>2.3 实践内容</h3><ol><li>本地创建&amp;拉取远程仓库</li><li>提交&amp;推送&amp;更新本地代码</li><li>创建&amp;合并&amp;撤销分支</li><li>解决代码冲突</li><li>代码审查（通过第三方GUI工具）</li></ol><h3 id="2-4-其他工具"><a href="#2-4-其他工具" class="headerlink" title="2.4 其他工具"></a>2.4 其他工具</h3><ul><li>钩子（hooks）<ul><li>pre-commit：提交信息前运行</li></ul></li></ul><h2 id="3-规范"><a href="#3-规范" class="headerlink" title="3. 规范"></a>3. 规范</h2><p><strong>使用Git规范的目的: Git代码版本管理，高效的协同开发</strong></p><h3 id="3-1-Git-branch管理"><a href="#3-1-Git-branch管理" class="headerlink" title="3.1 Git branch管理"></a>3.1 Git branch管理</h3><h4 id="3-1-1-分支命名规范介绍"><a href="#3-1-1-分支命名规范介绍" class="headerlink" title="3.1.1 分支命名规范介绍"></a>3.1.1 分支命名规范介绍</h4><ul><li><strong>目的</strong>: 通过<strong>规范的分支名</strong>可以快速、清晰地了解到此分支的<strong>内容</strong>和<strong>目的</strong></li><li><strong>最佳实践参考</strong><ol><li>以组名(group token)开头来区分不同类型的分支，如<code>feat</code>,<code>bug</code>,<code>wip</code>等</li><li>使用唯一标识ID来快速区分分支</li><li>利用<code>/</code>、<code>-</code>、<code>_</code>作为分隔符来增加可读性</li><li>添加开发者名来表明责任人</li><li>避免只用数字作为分支名</li><li>避免一刀切地使用所有命名规范，应根据团队开发的习惯和便利性角度，选择合适的规范，并持之以恒地运用在实际项目中</li><li>对生命周期长的分支，避免使用太长的分支名，应尽量保持简洁明了</li></ol></li></ul><h4 id="3-1-2-本地项目命名规范"><a href="#3-1-2-本地项目命名规范" class="headerlink" title="3.1.2 本地项目命名规范"></a>3.1.2 本地项目命名规范</h4><ul><li><p>原则:</p><ul><li>采用最佳实践参考中的<code>1, 2, 3, 5, 6, 7</code>规范</li><li>分支名: 由数字<code>[0-9]</code>，小写英文字母<code>[a-z]</code>， <code>/</code>，<code>-</code>以及<code>.</code>构成(小数点仅用于版本号)</li><li>分支长度: 总长度小于<strong>40</strong>个字符(不严格)</li></ul></li><li><p>定义</p><ul><li><p>**主分支 <code>master</code>**（默认）</p><ul><li>说明: 重要！不可轻易变更！</li></ul></li><li><p><strong>开发分支 <code>dev</code></strong></p><ul><li>说明: 开发过程主要使用的分支，不可随意将代码提交到此分支</li></ul></li><li><p><strong>需求分支</strong></p><ul><li>说明: 开发各个功能时需要使用的分支</li><li>格式1: 与TAPD联动的分支 <ul><li>命名规则: <code>s&lt;TAPD需求编号&gt;-&lt;组名&gt;/&lt;简要描述&gt;</code></li><li>例: <code>s1016379-bug/module-dependency-error</code></li></ul></li><li>格式2: 与Gitee issue联动的分支<ul><li>命名规则: <code>&lt;Gitee任务编号&gt;-&lt;组名&gt;/&lt;简要描述&gt;</code></li><li>例: <code>i5vtx-bug/module-dependency-error</code></li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 组名列表</span><br><span class="line">feat      新增功能</span><br><span class="line">bug       修复缺陷</span><br><span class="line">junk      试验测试（不常用，一般用于做一些实验性质的功能测试，不能合并到主线分支）</span><br><span class="line">wip       尚待完成（不常用，一般用于一些开发周期长、暂时无法合并到主线分支）</span><br></pre></td></tr></table></figure></li><li><p><strong>版本分支</strong></p><ul><li>说明: 用于发布的分支，用来做一些发布前的测试和相关文档的编写，不能从此分支再产出其他功能分支</li><li>格式: <code>release/&lt;版本编号&gt;</code><ul><li>版本编号: 由数字<code>[0-9]</code>和小数点组成</li><li>小数点区分大版本号和小版本: 小数点前的数字为大版本号，小数点后的数字为小版本号表示经历了部分小的改动</li></ul></li><li>例: <code>release/1.2</code></li></ul></li><li><p><strong>修补分支</strong></p><ul><li>说明: 用于修复发布的某个版本的缺陷</li><li>格式: <code>hotfix-&lt;版本号&gt;/&lt;简要描述&gt;</code></li><li>例: <code>hotfix-1.2/modify-doc-spell-miss</code></li></ul></li></ul></li></ul><h4 id="3-1-3-Branch使用规范"><a href="#3-1-3-Branch使用规范" class="headerlink" title="3.1.3 Branch使用规范"></a>3.1.3 Branch使用规范</h4><ol><li>不要直接在主分支<code>master</code>和开发分支<code>dev</code>上提交内容</li><li>不可删除主分支<code>master</code>和开发分支<code>dev</code></li><li>开发分支<code>dev</code>分支必须由主分支<code>master</code>产出</li><li>需求分支必须由开发分支<code>dev</code>产出</li><li>远程需求分支的删除需要慎重，在和其他小组成员商议达成意见一致后方可删除</li><li>当完成某一需求任务后，以Pull Request的形式请求合并需求分支到开发分支<code>dev</code></li><li>当需要发布版本时，从开发分支<code>dev</code>中创建版本分支，若版本分支中的内容有所更改，需要将内容同时更新到开发分支<code>dev</code>和主分支<code>master</code></li><li>完成版本分支后，需要创建标签Tag<code>v&lt;版本号&gt;</code>并提交</li><li>当发布某个版本后发现缺陷，需从主分支<code>master</code>中产出修复分支<code>hotfix</code>，完成修复后，合并到开发分支<code>dev</code>和主分支<code>master</code>，并更新版本号</li></ol><p><img src="/git-intro/git_4.png" alt="image-20231027141231828"></p><h4 id="3-1-4-代码提交（Commit）规范"><a href="#3-1-4-代码提交（Commit）规范" class="headerlink" title="3.1.4 代码提交（Commit）规范"></a>3.1.4 代码提交（Commit）规范</h4><ol><li><p>在分支上提交(commit)时，需要添加相关的注释(message)</p><ul><li>提交命令: <code>git commit -m &quot;&lt;msg&gt;&quot;</code></li></ul></li><li><p>提交时的信息内容</p><ul><li><p>格式: <code>[&lt;注释标签&gt;] &lt;TAPD需求编号/Gitee任务编号&gt;: &lt;文字描述&gt;</code></p><ul><li><p>注释标签</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 类别</span><br><span class="line">add         新增代码/文档</span><br><span class="line">del         删除代码/文档</span><br><span class="line">update      更新&amp;修改已有代码/文档</span><br><span class="line">fix         修正缺陷</span><br></pre></td></tr></table></figure></li><li><p>TAPD需求编号&#x2F;Gitee任务编号: 与branch中的一致</p></li><li><p>文字描述: 统一用中文书写</p></li></ul></li><li><p>例：<code>git commit -m &quot;[update] i5vtx: 将vue的版本修改为2.6.0&quot;</code></p></li></ul></li></ol><h3 id="3-2-Pull-Request-PR-规范"><a href="#3-2-Pull-Request-PR-规范" class="headerlink" title="3.2. Pull Request(PR)规范"></a>3.2. Pull Request(PR)规范</h3><h4 id="3-2-1-流程规范"><a href="#3-2-1-流程规范" class="headerlink" title="3.2.1 流程规范"></a>3.2.1 流程规范</h4><ol><li>从Gitee中创建&amp;提交PR</li><li>通过PR前必须指定除自己以外一名及以上的代码审查者(可指定2人，主审和副审)<ul><li>审查者不能为PR的开发者</li><li>指定审查者时需要提前与审查者沟通确认是否能及时审查，若不能，需指派其他可能的审查者</li></ul></li><li>审查者在查阅PR中的代码后可在PR下方留下评论，被审查者需要及时关注审查者留下的评论，并消除审查者的所有疑问后，此PR才可以通过</li></ol><p><img src="/git-intro/git_5.png" alt="image-20231027141253896"></p><h4 id="3-2-2-PR-内容模版"><a href="#3-2-2-PR-内容模版" class="headerlink" title="3.2.2 PR 内容模版"></a>3.2.2 PR 内容模版</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">### 需求说明</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 审查列表</span><br><span class="line">#### 内容相关</span><br><span class="line">- [ ] 已完成规定功能/需求</span><br><span class="line">- [ ] 未更改与此需求无关的功能模块（若有，请在补充中添加理由）</span><br><span class="line">- [ ] 已考虑相关处理的时间和空间复杂度，并有一定程度的优化</span><br><span class="line">- [ ] 对复杂难懂的代码块添加了合适的注释</span><br><span class="line">- [ ] 已删除多余的功能代码和文件</span><br><span class="line"></span><br><span class="line">#### 测试相关</span><br><span class="line">- [ ] 已通过本地环境测试</span><br><span class="line">- [ ] 已通过生产环境测试(若无，则不需要)</span><br><span class="line">- [ ] 已完成测试代码编写</span><br><span class="line">- [ ] 已完成相关测试，并记录了方法，流程以及结果</span><br><span class="line">- [ ] 无残留的测试用的代码和注释</span><br><span class="line"></span><br><span class="line">#### 格式相关</span><br><span class="line">- [ ] 无书写/拼写错误（英文单词等）</span><br><span class="line">- [ ] 变量，函数，类等的命令符合规范（camelCase, SNAKE_CASE, Pascal...)）</span><br><span class="line">- [ ] 已用代码排版工具（lint等）进行了代码排版</span><br><span class="line"></span><br><span class="line">#### 其他</span><br><span class="line">- [ ] PR对应的编号和需求编号一致</span><br><span class="line">- [ ] 合并的目标分支正确</span><br><span class="line">- [ ] 源分支的命名简单易懂(无需强行修改名称，下次注意即可)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 补充说明</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4-参考"><a href="#4-参考" class="headerlink" title="4. 参考"></a>4. 参考</h2><ol><li>Git教程:<ul><li><a href="https://git-scm.com/book/zh/v2">官方Git reference</a></li><li><a href="https://www.w3schools.com/git/">w3schools git</a></li></ul></li><li>Git练习参考:<a href="https://jlord.us/git-it/">git-it</a></li><li>规范<ul><li><a href="https://codingsight.com/git-branching-naming-convention-best-practices/">Git Branching Naming Convention: Best Practices</a></li><li><a href="https://stackoverflow.com/questions/273695/what-are-some-examples-of-commonly-used-practices-for-naming-git-branches">What are some examples of commonly used practices for naming git branches?</a></li><li><a href="https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow">Gitflow Workflow</a></li></ul></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Git入门-相关规范&quot;&gt;&lt;a href=&quot;#Git入门-相关规范&quot; class=&quot;headerlink&quot; title=&quot;Git入门&amp;amp;相关规范&quot;&gt;&lt;/a&gt;Git入门&amp;amp;相关规范&lt;/h1&gt;&lt;h2 id=&quot;1-概要&quot;&gt;&lt;a href=&quot;#1-概要&quot; cla</summary>
      
    
    
    
    <category term="tech" scheme="http://example.com/categories/tech/"/>
    
    
    <category term="git" scheme="http://example.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Welcome to Jalon&#39;s Blog!</title>
    <link href="http://example.com/2019/01/27/Home/"/>
    <id>http://example.com/2019/01/27/Home/</id>
    <published>2019-01-27T03:52:58.000Z</published>
    <updated>2024-06-17T02:40:15.679Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/work.png"></p><p>日常记录编程心得、技术调研总结以及个人的胡言乱语</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/work.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;日常记录编程心得、技术调研总结以及个人的胡言乱语&lt;/p&gt;
</summary>
      
    
    
    
    <category term="intro" scheme="http://example.com/categories/intro/"/>
    
    
    <category term="intro" scheme="http://example.com/tags/intro/"/>
    
  </entry>
  
</feed>
